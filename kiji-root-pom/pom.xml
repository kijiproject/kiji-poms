<!-- (c) Copyright 2012, WibiData Inc. -->
<!-- Root for all WibiData projects with globally shared dependency- and plugin-management -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.kiji.pom</groupId>
  <artifactId>root-pom</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Kiji core dependencies pom</name>
  <url>http://www.kiji.org</url>

  <organization>
    <name>WibiData, Inc.</name>
    <url>http://www.wibidata.com</url>
  </organization>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>

    <skipVerify>false</skipVerify>
    <redirectTestOutputToFile>true</redirectTestOutputToFile>
    <!-- Integration test parallelism mode: {none, methods, classes}. -->
    <it.parallel>classes</it.parallel>
    <!-- Number of threads per cpu core to use for parallel integration tests. -->
    <it.threadCount>1</it.threadCount>

    <!-- versions for program dependencies -->
    <avro.version>1.7.2</avro.version>
    <commons-io.version>2.1</commons-io.version>
    <commons-lang3.version>3.0</commons-lang3.version>
    <easymock.version>3.0</easymock.version>
    <gson.version>2.2.2</gson.version>
    <guava.version>11.0.2</guava.version>
    <hadoop.version>2.0.0-mr1-cdh4.1.1</hadoop.version>
    <hamcrest.version>1.1</hamcrest.version>
    <hbase.version>0.92.1-cdh4.1.1</hbase.version>
    <junit.version>4.10</junit.version>
    <log4j.version>1.2.16</log4j.version>
    <odiago-common-flags.version>1.0.5</odiago-common-flags.version>
    <scala.version>2.9.2</scala.version>
    <scala-jline.version>2.9.0-1</scala-jline.version>
    <scalatest.version>1.8</scalatest.version>
    <slf4j-api.version>1.6.1</slf4j-api.version>
    <slf4j-log4j12.version>1.6.1</slf4j-log4j12.version>
    <specs2.version>1.12</specs2.version>

    <!-- versions for maven plugins -->
    <findbugs-maven-plugin.version>2.5.1</findbugs-maven-plugin.version>
    <hbase-maven-plugin.version>1.0.7-cdh4</hbase-maven-plugin.version>
    <maven-assembly-plugin.version>2.3</maven-assembly-plugin.version>
    <maven-checkstyle-plugin.version>2.9.1</maven-checkstyle-plugin.version>
    <maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
    <maven-failsafe-plugin.version>2.12</maven-failsafe-plugin.version>
    <maven-jar-plugin.version>2.3.1</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>2.8</maven-javadoc-plugin.version>
    <maven-release-plugin.version>2.2.2</maven-release-plugin.version>
    <maven-replacer-plugin.version>1.3.8</maven-replacer-plugin.version>
    <maven-scala-plugin.version>2.15.2</maven-scala-plugin.version>
    <maven-site-plugin.version>3.1</maven-site-plugin.version>
    <maven-surefire-plugin.version>2.12</maven-surefire-plugin.version>
    <scalastyle-plugin.version>0.1.0</scalastyle-plugin.version>
  </properties>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro-maven-plugin</artifactId>
          <version>${avro.version}</version>
          <executions>
            <execution>
              <phase>generate-sources</phase>
              <goals>
                <goal>schema</goal>
                <goal>idl-protocol</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>maven-replacer-plugin</artifactId>
          <version>${maven-replacer-plugin.version}</version>
          <configuration>
            <!-- Use a regex replace to suppress java compiler warnings
                 in the generated code.  What a hack, eh? -->
            <basedir>${basedir}</basedir>
          </configuration>
          <executions>
            <execution>
              <!--
                  In all projects, if you generate avro code, then it should have the following
                  replacement regex run on it.
              -->
              <id>suppress-avro-warnings</id>
              <phase>process-sources</phase>
              <goals>
                <goal>replace</goal>
              </goals>
              <configuration>
                <includes>
                  <!-- This is a relative path because the plugin prefixes ${basedir} for us. -->
                  <include>target/generated-sources/avro/**/*.java</include>
                  <include>target/generated-test-sources/avro/**/*.java</include>
                </includes>
                <regex>false</regex>
                <replacements>
                  <!-- This is a temporary fix until AVRO-1047 is resolved. -->
                  <replacement>
                    <token>@SuppressWarnings("all")</token>
                    <value>@SuppressWarnings("unchecked")</value>
                  </replacement>
                </replacements>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- Compile for Java 1.6, with warnings enabled. -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <!-- Maven doesn't let me specify more than one command line
                 flag with the same name, so I've used both styles of
                 specifying compiler args to get all warnings except
                 serialVersionUID. -->
            <compilerArguments> <Xlint /> </compilerArguments>
            <compilerArgument>-Xlint:-serial</compilerArgument>
            <testCompilerArguments> <Xlint /> </testCompilerArguments>
            <testCompilerArgument>-Xlint:-serial</testCompilerArgument>
            <!-- End of maven compiler args hack -->
            <encoding>UTF-8</encoding>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
            <source>1.6</source>
            <target>1.6</target>
            <excludes>
              <exclude>**/*.scala</exclude>
            </excludes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.scala-tools</groupId>
          <artifactId>maven-scala-plugin</artifactId>
          <version>${maven-scala-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <includes>
              <include>**/*.scala</include>
            </includes>
            <displayCmd>true</displayCmd>
            <args>
              <arg>-deprecation</arg>
              <arg>-unchecked</arg>
              <arg>-explaintypes</arg>
            </args>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <includes>
              <include>**/Test*.java</include>
            </includes>
            <redirectTestOutputToFile>${redirectTestOutputToFile}</redirectTestOutputToFile>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <executions>
            <execution>
              <id>normal-javadoc</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>javadoc</goal>
              </goals>
              <configuration>
                <reportOutputDirectory>target/apidocs</reportOutputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <!-- add project version info, etc. to jar. -->
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
          <executions>
            <execution>
              <goals>
                <!-- create a test-jar in addition to a main jar. -->
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- if you enable this plugin, you must supply release.xml -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
          <configuration>
            <descriptors>
              <descriptor>${basedir}/src/main/assembly/release.xml</descriptor>
            </descriptors>
            <tarLongFileMode>gnu</tarLongFileMode>
          </configuration>
          <executions>
            <execution>
              <id>make-assembly</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.wibidata.maven.plugins</groupId>
          <artifactId>hbase-maven-plugin</artifactId>
          <version>${hbase-maven-plugin.version}</version>
          <configuration>
            <mapReduceEnabled>true</mapReduceEnabled>
            <hadoopConfiguration>
              <property>
                <name>mapred.tasktracker.map.tasks.maximum</name> <value>8</value>
              </property>
              <property>
                <name>mapred.tasktracker.reduce.tasks.maximum</name> <value>4</value>
              </property>
              <property>
                <name>hbase.regionserver.msginterval</name> <value>100</value>
              </property>
              <property>
                <name>hbase.client.pause</name> <value>50</value>
              </property>
            </hadoopConfiguration>
            <skip>${skipTests}</skip>
            <separateConfigurationFiles>false</separateConfigurationFiles>
            <systemPropertyVariables>
              <test.build.data>${basedir}</test.build.data>
            </systemPropertyVariables>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>start</goal>
                <goal>stop</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
          <configuration>
            <includes>
              <include>%regex[.*IntegrationTest.*]</include>
            </includes>
            <redirectTestOutputToFile>${redirectTestOutputToFile}</redirectTestOutputToFile>
            <parallel>${it.parallel}</parallel>
            <threadCount>${it.threadCount}</threadCount>
          </configuration>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- projects inheriting from this pom and enabling this plugin must
               supply a checkstyle.xml and suppressions.xml -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <configuration>
            <skip>${skipVerify}</skip>
            <configLocation>${basedir}/src/main/checkstyle/checkstyle.xml</configLocation>
            <suppressionsLocation>${basedir}/src/main/checkstyle/suppressions.xml</suppressionsLocation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <excludes>**/*.scala</excludes>
          </configuration>
          <executions>
            <execution>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- projects inheriting from this pom and enabling this plugin
               must supply an includeFilter.xml and excludeFilter.xml file.
          -->
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>${findbugs-maven-plugin.version}</version>
          <configuration>
            <skip>${skipVerify}</skip>
            <effort>Max</effort>
            <threshold>Low</threshold>
            <includeFilterFile>${basedir}/src/main/findbugs/includeFilter.xml</includeFilterFile>
            <excludeFilterFile>${basedir}/src/main/findbugs/excludeFilter.xml</excludeFilterFile>
            <xmlOutput>true</xmlOutput>
          </configuration>
          <executions>
            <execution>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- If you include this in your config, you must supply a
               src/main/scalastyle/scalastyle_config.xml file. -->
          <groupId>org.scalastyle</groupId>
          <artifactId>scalastyle-maven-plugin</artifactId>
          <version>${scalastyle-plugin.version}</version>
          <configuration>
            <skip>${skipVerify}</skip>
            <verbose>false</verbose>
            <failOnViolation>true</failOnViolation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <failOnWarning>false</failOnWarning>
            <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
            <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
            <configLocation>${basedir}/src/main/scalastyle/scalastyle_config.xml</configLocation>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <pushChanges>false</pushChanges>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.odiago.common</groupId>
        <artifactId>odiago-common-flags</artifactId>
        <version>${odiago-common-flags.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>

      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>jline</artifactId>
        <version>${scala-jline.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
        <scope>runtime</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-ipc</artifactId>
        <version>${avro.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-mapred</artifactId>
        <version>${avro.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-client</artifactId>
        <version>${hadoop.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-core</artifactId>
        <version>${hadoop.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-minicluster</artifactId>
        <version>${hadoop.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-test</artifactId>
        <version>${hadoop.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase</artifactId>
        <version>${hbase.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase</artifactId>
        <version>${hbase.version}</version>
        <scope>provided</scope>
        <type>test-jar</type>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-api.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j-log4j12.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-compiler</artifactId>
        <version>${scala.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.version}</artifactId>
        <version>${scalatest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.specs2</groupId>
        <artifactId>specs2_${scala.version}</artifactId>
        <version>${specs2.version}</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <repositories>
    <repository>
      <id>cloudera-repos</id>
      <name>cloudera-repos</name>
      <url>https://repository.cloudera.com/content/groups/cloudera-repos</url>
    </repository>
    <repository>
      <id>kiji-repos</id>
      <name>kiji-repos</name>
      <url>https://repo.wibidata.com/artifactory/kiji</url>
    </repository>
    <repository>
      <id>kiji-nightly</id>
      <name>kiji-nightly</name>
      <url>https://repo.wibidata.com/artifactory/kiji-nightly</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>kiji-plugins</id>
      <name>kiji-plugins</name>
      <url>https://repo.wibidata.com/artifactory/kiji</url>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <repository>
      <id>kiji-maven</id>
      <name>kiji-maven-releases</name>
      <url>https://repo.wibidata.com/artifactory/kiji-packages</url>
    </repository>
    <snapshotRepository>
      <id>kiji-maven</id>
      <name>kiji-maven-snapshots</name>
      <url>https://repo.wibidata.com/artifactory/kiji-packages</url>
    </snapshotRepository>
  </distributionManagement>

  <scm>
    <connection>scm:git:git@github.com:kijiproject</connection>
    <url>scm:git:git@github.com:kijiproject</url>
    <developerConnection>scm:git:git@github.com:kijiproject</developerConnection>
  </scm>

  <profiles>
    <profile>
      <id>kiji-nightly</id>
      <distributionManagement>
      <repository>
        <id>kiji-nightly</id>
        <name>kiji-nightly-releases</name>
        <url>https://repo.wibidata.com/artifactory/kiji-nightly</url>
      </repository>
      <snapshotRepository>
        <id>kiji-nightly</id>
        <name>kiji-nightly-snapshots</name>
        <url>https://repo.wibidata.com/artifactory/kiji-nightly</url>
      </snapshotRepository>
      </distributionManagement>
    </profile>
    <profile>
      <id>fast-findbugs</id>
      <build>
        <plugins>
          <plugin>
            <!-- projects inheriting from this pom and enabling this plugin
                 must supply an includeFilter.xml and excludeFilter.xml file.
            -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <version>${findbugs-maven-plugin.version}</version>
            <configuration>
              <skip>${skipVerify}</skip>
              <effort>Min</effort>
              <threshold>Medium</threshold>
              <includeFilterFile>${basedir}/src/main/findbugs/includeFilter.xml</includeFilterFile>
              <excludeFilterFile>${basedir}/src/main/findbugs/excludeFilter.xml</excludeFilterFile>
              <xmlOutput>true</xmlOutput>
            </configuration>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
